package TugasAkhir;

import TugasAkhir.welcomeGUI;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HP
 */
public class MenuCostumerGUI extends javax.swing.JFrame {

    /**
     * Creates new form MenuAdminGUI
     */
    private JTextField[] quantityFields; // Array JTextField untuk memasukkan jumlah makanan.
    private JCheckBox[] selectionCheckboxes; //Array JCheckBox untuk memilih makanan.

    public MenuCostumerGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jSpinnerEsBobaCaramel = new javax.swing.JSpinner();
        jSpinnerEsLumut = new javax.swing.JSpinner();
        jSpinnerEsManggaSmoothies = new javax.swing.JSpinner();
        jSpinnerEsGreenTea = new javax.swing.JSpinner();
        jSpinnerEsChocolateOreo = new javax.swing.JSpinner();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jSpinnerEsThaiTea = new javax.swing.JSpinner();
        beliEsThaiTea = new javax.swing.JButton();
        beliEsLumut = new javax.swing.JButton();
        beliEsManggaSmoothies = new javax.swing.JButton();
        beliEsChocolateOreo = new javax.swing.JButton();
        beliEsBobaCaramel = new javax.swing.JButton();
        beliEsGreenTea = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSpinnerCookies = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jSpinnerMilleCrepes = new javax.swing.JSpinner();
        jSpinnerFruitSando = new javax.swing.JSpinner();
        jSpinnerMochiDaifuku = new javax.swing.JSpinner();
        jSpinnerBomboloni = new javax.swing.JSpinner();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jSpinnerMochiBites = new javax.swing.JSpinner();
        beliMochiDaifuku = new javax.swing.JButton();
        beliMochiBites = new javax.swing.JButton();
        beliMilleCrepes = new javax.swing.JButton();
        beliFruitSando = new javax.swing.JButton();
        beliCookies = new javax.swing.JButton();
        beliBomboloni = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jSpinnerRiceBowlTeriyaki = new javax.swing.JSpinner();
        jSpinnerWontonKuah = new javax.swing.JSpinner();
        jSpinnerKimbab = new javax.swing.JSpinner();
        jSpinnerDimsum = new javax.swing.JSpinner();
        jSpinnerBasoPentol = new javax.swing.JSpinner();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jSpinnerNasiKebuli = new javax.swing.JSpinner();
        beliRiceBowlTeriyaki = new javax.swing.JButton();
        beliKimbab = new javax.swing.JButton();
        beliWontonKuah = new javax.swing.JButton();
        beliBasoPentol = new javax.swing.JButton();
        beliDimsum = new javax.swing.JButton();
        beliNasiKebuli = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel41 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        rincian = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        btnOrder = new javax.swing.JButton();
        btnHitung = new javax.swing.JButton();
        jtxtTotalKeseluruhan = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 153), 7));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GambarGUI/thai tea.png"))); // NOI18N
        jLabel9.setText("jLabel9");

        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GambarGUI/BOBAA 1.png"))); // NOI18N
        jLabel21.setText("jLabel21");

        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GambarGUI/oreo ES 1.png"))); // NOI18N
        jLabel22.setText("jLabel22");

        jLabel24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GambarGUI/smoothies 1 1.png"))); // NOI18N
        jLabel24.setText("jLabel24");

        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GambarGUI/matcha.png"))); // NOI18N
        jLabel23.setText("jLabel23");

        jSpinnerEsBobaCaramel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jSpinnerEsBobaCaramel.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
                jSpinnerEsBobaCaramelAncestorMoved(evt);
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
            }
        });

        jSpinnerEsLumut.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jSpinnerEsLumut.addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                jSpinnerEsLumutHierarchyChanged(evt);
            }
        });
        jSpinnerEsLumut.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerEsLumutStateChanged(evt);
            }
        });
        jSpinnerEsLumut.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
                jSpinnerEsLumutAncestorMoved(evt);
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
            }
        });

        jSpinnerEsManggaSmoothies.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jSpinnerEsManggaSmoothies.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
                jSpinnerEsManggaSmoothiesAncestorMoved(evt);
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
            }
        });

        jSpinnerEsGreenTea.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jSpinnerEsGreenTea.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
                jSpinnerEsGreenTeaAncestorMoved(evt);
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
            }
        });

        jSpinnerEsChocolateOreo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jSpinnerEsChocolateOreo.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
                jSpinnerEsChocolateOreoAncestorMoved(evt);
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
            }
        });

        jLabel25.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel25.setText(" ES Mangga Smoothies");

        jLabel26.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel26.setText(" ES Thai Tea");

        jLabel27.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel27.setText("Es Boba Caramel");

        jLabel28.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel28.setText(" ES Chocolate Oreo");

        jLabel29.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel29.setText("ES Green Tea");

        jLabel30.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel30.setText(" ES Lumut ");

        jLabel37.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GambarGUI/lumut 1.png"))); // NOI18N
        jLabel37.setText("jLabel37");

        jSpinnerEsThaiTea.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jSpinnerEsThaiTea.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
                jSpinnerEsThaiTeaAncestorMoved(evt);
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
            }
        });

        beliEsThaiTea.setText("Beli ini");
        beliEsThaiTea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beliEsThaiTeaActionPerformed(evt);
            }
        });

        beliEsLumut.setText("Beli ini");
        beliEsLumut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beliEsLumutActionPerformed(evt);
            }
        });

        beliEsManggaSmoothies.setText("Beli ini");
        beliEsManggaSmoothies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beliEsManggaSmoothiesActionPerformed(evt);
            }
        });

        beliEsChocolateOreo.setText("Beli ini");
        beliEsChocolateOreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beliEsChocolateOreoActionPerformed(evt);
            }
        });

        beliEsBobaCaramel.setText("Beli ini");
        beliEsBobaCaramel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beliEsBobaCaramelActionPerformed(evt);
            }
        });

        beliEsGreenTea.setText("Beli ini");
        beliEsGreenTea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beliEsGreenTeaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel25)
                                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(jSpinnerEsManggaSmoothies, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(beliEsManggaSmoothies, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(83, 83, 83)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel26)
                                            .addComponent(beliEsThaiTea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jSpinnerEsThaiTea))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(26, 26, 26)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel29)
                                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(jSpinnerEsChocolateOreo, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(beliEsChocolateOreo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(jSpinnerEsGreenTea, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(beliEsGreenTea, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addGap(25, 25, 25))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(15, 15, 15)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel30)
                                                    .addComponent(jSpinnerEsLumut, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(beliEsLumut)))
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(34, 34, 34)
                                                .addComponent(jLabel28)))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel27)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jSpinnerEsBobaCaramel, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(beliEsBobaCaramel)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(18, 18, 18))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerEsLumut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(beliEsLumut))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                            .addGap(43, 43, 43)
                            .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jSpinnerEsThaiTea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(beliEsThaiTea)
                            .addGap(58, 58, 58))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGap(11, 11, 11)
                            .addComponent(jLabel37))))
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerEsChocolateOreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(beliEsChocolateOreo)
                        .addGap(91, 91, 91)
                        .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerEsGreenTea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(beliEsGreenTea)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel21)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinnerEsManggaSmoothies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(beliEsManggaSmoothies)
                                .addGap(84, 84, 84)
                                .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinnerEsBobaCaramel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(beliEsBobaCaramel))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(48, Short.MAX_VALUE))))
        );

        jTabbedPane1.addTab("Drinks", jPanel3);

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 153), 7));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GambarGUI/Moci 1_1.png"))); // NOI18N
        jLabel1.setText("jLabel1");

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GambarGUI/mille 1.png"))); // NOI18N
        jLabel5.setText("jLabel5");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GambarGUI/bites 1.png"))); // NOI18N
        jLabel4.setText("jLabel4");

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GambarGUI/sando 1 (1).png"))); // NOI18N
        jLabel6.setText("jLabel6");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GambarGUI/cookies 1.png"))); // NOI18N
        jLabel2.setText("jLabel2");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel3.setText("Mochi Daifuku");

        jSpinnerCookies.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jSpinnerCookies.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
                jSpinnerCookiesAncestorMoved(evt);
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
            }
        });

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GambarGUI/bomboloni 1.png"))); // NOI18N
        jLabel7.setText("jLabel7");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel8.setText("Mochi Bites");

        jSpinnerMilleCrepes.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jSpinnerMilleCrepes.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
                jSpinnerMilleCrepesAncestorMoved(evt);
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
            }
        });

        jSpinnerFruitSando.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jSpinnerFruitSando.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
                jSpinnerFruitSandoAncestorMoved(evt);
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
            }
        });

        jSpinnerMochiDaifuku.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jSpinnerMochiDaifuku.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
                jSpinnerMochiDaifukuAncestorMoved(evt);
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
            }
        });

        jSpinnerBomboloni.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jSpinnerBomboloni.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
                jSpinnerBomboloniAncestorMoved(evt);
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel11.setText("Mille Crepes");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel12.setText("Fruit Sando");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel13.setText("Cookies");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel14.setText("Bomboloni");

        jSpinnerMochiBites.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jSpinnerMochiBites.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
                jSpinnerMochiBitesAncestorMoved(evt);
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
            }
        });

        beliMochiDaifuku.setText("Beli ini");
        beliMochiDaifuku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beliMochiDaifukuActionPerformed(evt);
            }
        });

        beliMochiBites.setText("Beli ini");
        beliMochiBites.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beliMochiBitesActionPerformed(evt);
            }
        });

        beliMilleCrepes.setText("Beli ini");
        beliMilleCrepes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beliMilleCrepesActionPerformed(evt);
            }
        });

        beliFruitSando.setText("Beli ini");
        beliFruitSando.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beliFruitSandoActionPerformed(evt);
            }
        });

        beliCookies.setText("Beli ini");
        beliCookies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beliCookiesActionPerformed(evt);
            }
        });

        beliBomboloni.setText("Beli ini");
        beliBomboloni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beliBomboloniActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(beliMilleCrepes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jSpinnerMilleCrepes))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(beliCookies, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jSpinnerCookies)))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jSpinnerMochiDaifuku, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(beliMochiDaifuku, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jSpinnerMochiBites, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(beliMochiBites, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jSpinnerFruitSando, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(beliFruitSando, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jSpinnerBomboloni, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(beliBomboloni, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(15, 15, 15))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerMochiDaifuku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(beliMochiDaifuku))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerMochiBites, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(beliMochiBites)))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinnerFruitSando, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(beliFruitSando))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinnerMilleCrepes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(beliMilleCrepes))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(68, 68, 68)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerCookies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(beliCookies)
                        .addContainerGap())
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinnerBomboloni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(beliBomboloni)
                                .addGap(90, 90, 90))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(55, 55, 55))))))
        );

        jTabbedPane1.addTab("Desserts", jPanel5);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 153), 7));

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GambarGUI/RiciBowl 1.png"))); // NOI18N
        jLabel15.setText("jLabel15");

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GambarGUI/Dimsum 1.png"))); // NOI18N
        jLabel16.setText("jLabel16");

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GambarGUI/Wongton 1.png"))); // NOI18N
        jLabel17.setText("jLabel17");

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GambarGUI/Kimbab 1.png"))); // NOI18N

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GambarGUI/Nasi kebuli 1.png"))); // NOI18N
        jLabel19.setText("jLabel19");

        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GambarGUI/Baso pentol 1.png"))); // NOI18N
        jLabel20.setText("jLabel20");

        jSpinnerRiceBowlTeriyaki.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jSpinnerRiceBowlTeriyaki.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
                jSpinnerRiceBowlTeriyakiAncestorMoved(evt);
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
            }
        });

        jSpinnerWontonKuah.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jSpinnerWontonKuah.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
                jSpinnerWontonKuahAncestorMoved(evt);
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
            }
        });

        jSpinnerKimbab.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jSpinnerKimbab.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
                jSpinnerKimbabAncestorMoved(evt);
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
            }
        });

        jSpinnerDimsum.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jSpinnerDimsum.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
                jSpinnerDimsumAncestorMoved(evt);
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
            }
        });

        jSpinnerBasoPentol.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jSpinnerBasoPentol.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
                jSpinnerBasoPentolAncestorMoved(evt);
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
            }
        });

        jLabel31.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel31.setText("Rice Bowl Teriyaki");

        jLabel32.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel32.setText("Wonton Kuah");

        jLabel34.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel34.setText("Kimbab ");

        jLabel35.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel35.setText("Dimsum ");

        jLabel36.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel36.setText("Baso Pentol");

        jLabel39.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel39.setText("Nasi Kebuli");

        jSpinnerNasiKebuli.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jSpinnerNasiKebuli.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
                jSpinnerNasiKebuliAncestorMoved(evt);
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
            }
        });

        beliRiceBowlTeriyaki.setText("Beli ini");
        beliRiceBowlTeriyaki.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beliRiceBowlTeriyakiActionPerformed(evt);
            }
        });

        beliKimbab.setText("Beli ini");
        beliKimbab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beliKimbabActionPerformed(evt);
            }
        });

        beliWontonKuah.setText("Beli ini");
        beliWontonKuah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beliWontonKuahActionPerformed(evt);
            }
        });

        beliBasoPentol.setText("Beli ini");
        beliBasoPentol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beliBasoPentolActionPerformed(evt);
            }
        });

        beliDimsum.setText("Beli ini");
        beliDimsum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beliDimsumActionPerformed(evt);
            }
        });

        beliNasiKebuli.setText("Beli ini");
        beliNasiKebuli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beliNasiKebuliActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel32)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel31)
                            .addComponent(jLabel39)
                            .addComponent(beliWontonKuah)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jSpinnerRiceBowlTeriyaki, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(beliRiceBowlTeriyaki, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jSpinnerWontonKuah, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jSpinnerNasiKebuli, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(beliNasiKebuli, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel36)
                            .addComponent(beliBasoPentol, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSpinnerBasoPentol)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel35)
                            .addComponent(jLabel34)
                            .addComponent(beliKimbab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(beliDimsum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSpinnerKimbab)
                            .addComponent(jSpinnerDimsum))))
                .addGap(80, 80, 80))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(jLabel15)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerKimbab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(beliKimbab))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerRiceBowlTeriyaki, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(beliRiceBowlTeriyaki)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinnerDimsum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(beliDimsum))
                            .addComponent(jLabel17)
                            .addComponent(jLabel16)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerWontonKuah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(beliWontonKuah)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel20)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jSpinnerNasiKebuli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(beliNasiKebuli)
                                        .addGap(41, 41, 41))
                                    .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(57, 57, 57))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinnerBasoPentol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(beliBasoPentol)
                                .addGap(94, 94, 94))))))
        );

        jTabbedPane1.addTab("Foods", jPanel2);

        jPanel1.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 520, 618));

        jPanel4.setBackground(new java.awt.Color(255, 102, 102));

        jLabel41.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(255, 255, 255));
        jLabel41.setText("MENU DANUSAN !!");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel41)
                .addContainerGap(833, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(jLabel41)
                .addGap(18, 18, 18))
        );

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1076, 70));

        rincian.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nama Produk", "Jumlah Produk", "Harga Satuan", "Jumlah Harga"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Float.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        rincian.setRowHeight(40);
        rincian.setRowMargin(8);
        rincian.addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                rincianHierarchyChanged(evt);
            }
        });
        rincian.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
                rincianAncestorMoved(evt);
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
            }
        });
        jScrollPane1.setViewportView(rincian);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 130, -1, 430));

        btnBack.setBackground(new java.awt.Color(255, 102, 102));
        btnBack.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        jPanel1.add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 650, 130, 30));

        btnOrder.setBackground(new java.awt.Color(255, 102, 102));
        btnOrder.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        btnOrder.setForeground(new java.awt.Color(255, 255, 255));
        btnOrder.setText("Order");
        btnOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrderActionPerformed(evt);
            }
        });
        jPanel1.add(btnOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 650, 120, 30));

        btnHitung.setBackground(new java.awt.Color(255, 102, 102));
        btnHitung.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnHitung.setForeground(new java.awt.Color(255, 255, 255));
        btnHitung.setText("Hitung Keseluruhan");
        btnHitung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHitungActionPerformed(evt);
            }
        });
        jPanel1.add(btnHitung, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 560, 450, 30));

        jtxtTotalKeseluruhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtTotalKeseluruhanActionPerformed(evt);
            }
        });
        jPanel1.add(jtxtTotalKeseluruhan, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 610, 260, 30));

        jLabel33.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setText("Formulir Pemesanan!! ");
        jPanel1.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jLabel38.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(255, 255, 255));
        jLabel38.setText("Formulir Pemesanan!! ");
        jPanel1.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jLabel40.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(255, 255, 255));
        jLabel40.setText("Formulir Pemesanan!! ");
        jPanel1.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 102, 102));
        jLabel10.setText("Total Keseluruhan :");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 610, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 746, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        this.dispose();
        welcomeGUI welcomeGUI = new welcomeGUI();
        welcomeGUI.setVisible(true);

        int value = (Integer) jSpinnerEsThaiTea.getValue();

    }//GEN-LAST:event_btnBackActionPerformed

    private void rincianHierarchyChanged(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_rincianHierarchyChanged

    }//GEN-LAST:event_rincianHierarchyChanged

    private void jSpinnerEsThaiTeaAncestorMoved(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_jSpinnerEsThaiTeaAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jSpinnerEsThaiTeaAncestorMoved

    private void jSpinnerEsLumutHierarchyChanged(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_jSpinnerEsLumutHierarchyChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jSpinnerEsLumutHierarchyChanged

    private void jSpinnerEsLumutStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerEsLumutStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jSpinnerEsLumutStateChanged
    private boolean isTotalHitung = true; // Variabel untuk melacak apakah tombol Total sudah ditekan sebelumnya

    private void btnHitungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHitungActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) rincian.getModel();
        model.setColumnIdentifiers(new Object[]{"Nama Produk", "Jumlah Produk", "Harga Satuan", "Jumlah Harga"});
        model.setRowCount(0);
        // Variabel untuk melacak apakah ada menu yang dipilih
        JCheckBox chkEsThaiTea = new JCheckBox("Es Thai Tea");
        JCheckBox chkEsLumut = new JCheckBox("Es Lumut");
        JCheckBox chkEsManggaSmoothies = new JCheckBox("Es Mangga Smoothies");
        JCheckBox chkEsChocolateOreo = new JCheckBox("Es Chocolate Oreo");
        JCheckBox chkEsBobaCaramel = new JCheckBox("Es Boba Caramel");
        JCheckBox chkEsGreenTea = new JCheckBox("Es Green Tea");
        JCheckBox chkMochiDaifuku = new JCheckBox("Mochi Daifuku");
        JCheckBox chkMochiBites = new JCheckBox("Mochi Bites");
        JCheckBox chkMilleCrepes = new JCheckBox("Mille Crepes");
        JCheckBox chkFruitSando = new JCheckBox("Fruit Sando");
        JCheckBox chkCookies = new JCheckBox("Cookies");
        JCheckBox chkBomboloni = new JCheckBox("Bomboloni");
        JCheckBox chkRiceBowlTeriyaki = new JCheckBox("Rice Bowl Teriyaki");
        JCheckBox chkKimbab = new JCheckBox("Kimbab");
        JCheckBox chkWontonKuah = new JCheckBox("Wonton Kuah");
        JCheckBox chkDimsum = new JCheckBox("Dimsum");
        JCheckBox chkNasiKebuli = new JCheckBox("Nasi Kebuli");
        JCheckBox chkBasoPentol = new JCheckBox("Baso Pentol");

        boolean isMenuSelected = false;
        // Memeriksa apakah salah satu checkbox makanan dipilih oleh pengguna
        if (chkEsThaiTea.isSelected() || chkEsLumut.isSelected() || chkEsManggaSmoothies.isSelected() || chkEsChocolateOreo.isSelected()
                || chkEsBobaCaramel.isSelected() || chkEsGreenTea.isSelected() || chkMochiDaifuku.isSelected() || chkMochiBites.isSelected()
                || chkMilleCrepes.isSelected() || chkFruitSando.isSelected() || chkCookies.isSelected() || chkBomboloni.isSelected()
                || chkRiceBowlTeriyaki.isSelected() || chkKimbab.isSelected() || chkWontonKuah.isSelected() || chkDimsum.isSelected()
                || chkNasiKebuli.isSelected() || chkBasoPentol.isSelected()) {
            isMenuSelected = true; //Set menjadi true jika ada menu yang dipilih
        }
        List<Object[]> orderdetails = new ArrayList<>(); // List untuk menyimpan rincian pesanan

        if (chkEsThaiTea.isSelected()) {
            int qty = (int) jSpinnerEsThaiTea.getValue();
            if (qty <= 0) {
                JOptionPane.showMessageDialog(this, "Jumlah Es Thai Tea tidak boleh 0 atau negatif.", "Peringatan", JOptionPane.WARNING_MESSAGE);
                return;
            }
            Object[] order = new Object[]{
                "Es Thai Tea", qty, 10000, qty * 10000};
            model.addRow(order);
        }
        if (chkEsLumut.isSelected()) {
            int qty = (int) jSpinnerEsLumut.getValue();
            if (qty <= 0) {
                JOptionPane.showMessageDialog(this, "Jumlah Es Lumut tidak boleh 0 atau negatif.", "Peringatan", JOptionPane.WARNING_MESSAGE);
                return;
            }
            Object[] order = new Object[]{
                "Es Lumut", qty, 8000, qty * 8000};
            model.addRow(order);
        }
        if (chkEsManggaSmoothies.isSelected()) {
            int qty = (int) jSpinnerEsManggaSmoothies.getValue();
            if (qty <= 0) {
                JOptionPane.showMessageDialog(this, "Jumlah Es Mangga Smoothies tidak boleh 0 atau negatif.", "Peringatan", JOptionPane.WARNING_MESSAGE);
                return;
            }
            Object[] order = new Object[]{
                "Es Mangga Smoothies", qty, 10000, qty * 10000};
            model.addRow(order);
        }
        if (chkEsChocolateOreo.isSelected()) {
            int qty = (int) jSpinnerEsChocolateOreo.getValue();
            if (qty <= 0) {
                JOptionPane.showMessageDialog(this, "Jumlah Es Chocolate Oreo tidak boleh 0 atau negatif.", "Peringatan", JOptionPane.WARNING_MESSAGE);
                return;
            }
            Object[] order = new Object[]{
                "Es Chocolate Oreo", qty, 10000, qty * 10000};
            model.addRow(order);
        }
        if (chkEsBobaCaramel.isSelected()) {
            int qty = (int) jSpinnerEsBobaCaramel.getValue();
            if (qty <= 0) {
                JOptionPane.showMessageDialog(this, "Jumlah Es Boba Caramel tidak boleh 0 atau negatif.", "Peringatan", JOptionPane.WARNING_MESSAGE);
                return;
            }
            Object[] order = new Object[]{
                "Es Boba Caramel", qty, 10000, qty * 10000};
            model.addRow(order);
        }
        if (chkEsGreenTea.isSelected()) {
            int qty = (int) jSpinnerEsGreenTea.getValue();
            if (qty <= 0) {
                JOptionPane.showMessageDialog(this, "Jumlah Es Green Tea tidak boleh 0 atau negatif.", "Peringatan", JOptionPane.WARNING_MESSAGE);
                return;
            }
            Object[] order = new Object[]{
                "Es Green Tea", qty, 10000, qty * 10000};
            model.addRow(order);
        }
        if (chkMochiDaifuku.isSelected()) {
            int qty = (int) jSpinnerMochiDaifuku.getValue();
            if (qty <= 0) {
                JOptionPane.showMessageDialog(this, "Jumlah Mochi Daifuku tidak boleh 0 atau negatif.", "Peringatan", JOptionPane.WARNING_MESSAGE);
                return;
            }
            Object[] order = new Object[]{
                "Mochi Daifuku", qty, 5000, qty * 5000};
            model.addRow(order);
        }
        if (chkMochiBites.isSelected()) {
            int qty = (int) jSpinnerMochiBites.getValue();
            if (qty <= 0) {
                JOptionPane.showMessageDialog(this, "Jumlah Mochi Bites tidak boleh 0 atau negatif.", "Peringatan", JOptionPane.WARNING_MESSAGE);
                return;
            }
            Object[] order = new Object[]{
                "Mochi Bites", qty, 12000, qty * 12000};
            model.addRow(order);
        }
        if (chkMilleCrepes.isSelected()) {
            int qty = (int) jSpinnerMilleCrepes.getValue();
            if (qty <= 0) {
                JOptionPane.showMessageDialog(this, "Jumlah Mille Crepes tidak boleh 0 atau negatif.", "Peringatan", JOptionPane.WARNING_MESSAGE);
                return;
            }
            Object[] order = new Object[]{
                "Mille Crepes", qty, 12000, qty * 12000};
            model.addRow(order);
        }
        if (chkFruitSando.isSelected()) {
            int qty = (int) jSpinnerFruitSando.getValue();
            if (qty <= 0) {
                JOptionPane.showMessageDialog(this, "Jumlah Fruit Sando tidak boleh 0 atau negatif.", "Peringatan", JOptionPane.WARNING_MESSAGE);
                return;
            }
            Object[] order = new Object[]{
                "Fruit Sando", qty, 10000, qty * 10000};
            model.addRow(order);
        }
        if (chkCookies.isSelected()) {
            int qty = (int) jSpinnerCookies.getValue();
            if (qty <= 0) {
                JOptionPane.showMessageDialog(this, "Jumlah Cookies tidak boleh 0 atau negatif.", "Peringatan", JOptionPane.WARNING_MESSAGE);
                return;
            }
            Object[] order = new Object[]{
                "Cookies", qty, 8000, qty * 8000};
            model.addRow(order);
        }
        if (chkBomboloni.isSelected()) {
            int qty = (int) jSpinnerBomboloni.getValue();
            if (qty <= 0) {
                JOptionPane.showMessageDialog(this, "Jumlah Bomboloni tidak boleh 0 atau negatif.", "Peringatan", JOptionPane.WARNING_MESSAGE);
                return;
            }
            Object[] order = new Object[]{
                "Bomboloni", qty, 10000, qty * 10000};
            model.addRow(order);
        }
        if (chkRiceBowlTeriyaki.isSelected()) {
            int qty = (int) jSpinnerRiceBowlTeriyaki.getValue();
            if (qty <= 0) {
                JOptionPane.showMessageDialog(this, "Jumlah Rice Bowl Teriyaki tidak boleh 0 atau negatif.", "Peringatan", JOptionPane.WARNING_MESSAGE);
                return;
            }
            Object[] order = new Object[]{
                "Rice Bowl Teriyaki", qty, 15000, qty * 15000};
            model.addRow(order);
        }
        if (chkKimbab.isSelected()) {
            int qty = (int) jSpinnerKimbab.getValue();
            if (qty <= 0) {
                JOptionPane.showMessageDialog(this, "Jumlah Kimbab tidak boleh 0 atau negatif.", "Peringatan", JOptionPane.WARNING_MESSAGE);
                return;
            }
            Object[] order = new Object[]{
                "Kimbab", qty, 13000, qty * 13000};
            model.addRow(order);
        }
        if (chkWontonKuah.isSelected()) {
            int qty = (int) jSpinnerWontonKuah.getValue();
            if (qty <= 0) {
                JOptionPane.showMessageDialog(this, "Jumlah Wonton Kuah tidak boleh 0 atau negatif.", "Peringatan", JOptionPane.WARNING_MESSAGE);
                return;
            }
            Object[] order = new Object[]{
                "Wonton Kuah", qty, 15000, qty * 15000};
            model.addRow(order);
        }
        if (chkDimsum.isSelected()) {
            int qty = (int) jSpinnerDimsum.getValue();
            if (qty <= 0) {
                JOptionPane.showMessageDialog(this, "Jumlah Dimsum tidak boleh 0 atau negatif.", "Peringatan", JOptionPane.WARNING_MESSAGE);
                return;
            }
            Object[] order = new Object[]{
                "Dimsum", qty, 10000, qty * 10000};
            model.addRow(order);
        }
        if (chkNasiKebuli.isSelected()) {
            int qty = (int) jSpinnerNasiKebuli.getValue();
            if (qty <= 0) {
                JOptionPane.showMessageDialog(this, "Jumlah Nasi Kebuli  tidak boleh 0 atau negatif.", "Peringatan", JOptionPane.WARNING_MESSAGE);
                return;
            }
            Object[] order = new Object[]{
                "Nasi Kebuli ", qty, 13000, qty * 13000};
            model.addRow(order);
        }
        if (chkBasoPentol.isSelected()) {
            int qty = (int) jSpinnerBasoPentol.getValue();
            if (qty <= 0) {
                JOptionPane.showMessageDialog(this, "Jumlah Baso Pentol tidak boleh 0 atau negatif.", "Peringatan", JOptionPane.WARNING_MESSAGE);
                return;
            }
            Object[] order = new Object[]{
                "Baso Pentol", qty, 10000, qty * 10000};
            model.addRow(order);
        }
        // Jika tidak ada menu yang dipilih, tampilkan pesan peringatan dan hentikan eksekusi
        if (!isMenuSelected) {
            JOptionPane.showMessageDialog(this, "Harap pilih salah satu menu terlebih dahulu.", "Peringatan", JOptionPane.WARNING_MESSAGE);
            // Jika total sudah dihitung sebelumnya, beri peringatan dan hentikan eksekusi
            if (isTotalHitung) {
                JOptionPane.showMessageDialog(this, "Total sudah dihitung, lanjutkan ke pembayaran atau reset untuk memulai baru.");
            }
            return;
        }


    }//GEN-LAST:event_btnHitungActionPerformed

    private void jSpinnerEsManggaSmoothiesAncestorMoved(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_jSpinnerEsManggaSmoothiesAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jSpinnerEsManggaSmoothiesAncestorMoved

    private void jSpinnerEsBobaCaramelAncestorMoved(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_jSpinnerEsBobaCaramelAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jSpinnerEsBobaCaramelAncestorMoved

    private void jSpinnerEsLumutAncestorMoved(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_jSpinnerEsLumutAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jSpinnerEsLumutAncestorMoved

    private void jSpinnerEsChocolateOreoAncestorMoved(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_jSpinnerEsChocolateOreoAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jSpinnerEsChocolateOreoAncestorMoved

    private void jSpinnerEsGreenTeaAncestorMoved(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_jSpinnerEsGreenTeaAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jSpinnerEsGreenTeaAncestorMoved

    private void jSpinnerMochiDaifukuAncestorMoved(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_jSpinnerMochiDaifukuAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jSpinnerMochiDaifukuAncestorMoved

    private void jSpinnerMilleCrepesAncestorMoved(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_jSpinnerMilleCrepesAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jSpinnerMilleCrepesAncestorMoved

    private void jSpinnerCookiesAncestorMoved(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_jSpinnerCookiesAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jSpinnerCookiesAncestorMoved

    private void jSpinnerMochiBitesAncestorMoved(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_jSpinnerMochiBitesAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jSpinnerMochiBitesAncestorMoved

    private void jSpinnerFruitSandoAncestorMoved(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_jSpinnerFruitSandoAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jSpinnerFruitSandoAncestorMoved

    private void jSpinnerBomboloniAncestorMoved(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_jSpinnerBomboloniAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jSpinnerBomboloniAncestorMoved

    private void jSpinnerRiceBowlTeriyakiAncestorMoved(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_jSpinnerRiceBowlTeriyakiAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jSpinnerRiceBowlTeriyakiAncestorMoved

    private void jSpinnerWontonKuahAncestorMoved(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_jSpinnerWontonKuahAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jSpinnerWontonKuahAncestorMoved

    private void jSpinnerNasiKebuliAncestorMoved(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_jSpinnerNasiKebuliAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jSpinnerNasiKebuliAncestorMoved

    private void jSpinnerKimbabAncestorMoved(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_jSpinnerKimbabAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jSpinnerKimbabAncestorMoved

    private void jSpinnerDimsumAncestorMoved(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_jSpinnerDimsumAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jSpinnerDimsumAncestorMoved

    private void jSpinnerBasoPentolAncestorMoved(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_jSpinnerBasoPentolAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jSpinnerBasoPentolAncestorMoved

    private void rincianAncestorMoved(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_rincianAncestorMoved
        // TODO add your handling code here:

    }//GEN-LAST:event_rincianAncestorMoved

    private void beliEsThaiTeaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beliEsThaiTeaActionPerformed
        // Mengambil model tabel yang sudah ada
        DefaultTableModel model = (DefaultTableModel) rincian.getModel();

        // Mendapatkan jumlah dari spinner
        int jumlahEsThaiTea = (int) jSpinnerEsThaiTea.getValue();
        int hargaEsThaiTea = 10000;

        // Validasi jumlah
        if (jumlahEsThaiTea > 0) {
            // Menghitung total harga
            int jumlahHarga = jumlahEsThaiTea * hargaEsThaiTea;

            // Menambahkan data baru ke tabel
            model.addRow(new Object[]{"Es Thai Tea", jumlahEsThaiTea, hargaEsThaiTea, jumlahHarga});

            // Pesan sukses
            JOptionPane.showMessageDialog(this, "Es Thai Tea berhasil ditambahkan ke rincian.", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Pesan peringatan
            JOptionPane.showMessageDialog(this, "Jumlah Es Thai Tea harus lebih dari 0.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_beliEsThaiTeaActionPerformed

    private void beliEsLumutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beliEsLumutActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) rincian.getModel();

        // Mendapatkan jumlah dari spinner
        int jumlahEsLumut = (int) jSpinnerEsLumut.getValue();
        int hargaEsLumut = 8000;

        // Validasi jumlah
        if (jumlahEsLumut > 0) {
            // Menghitung total harga
            int jumlahHarga = jumlahEsLumut * hargaEsLumut;

            // Menambahkan data baru ke tabel
            model.addRow(new Object[]{"Es Lumut", jumlahEsLumut, hargaEsLumut, jumlahHarga});

            // Pesan sukses
            JOptionPane.showMessageDialog(this, "Es Lumut berhasil ditambahkan ke rincian.", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Pesan peringatan
            JOptionPane.showMessageDialog(this, "Jumlah Es Lumut harus lebih dari 0.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_beliEsLumutActionPerformed

    private void beliEsManggaSmoothiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beliEsManggaSmoothiesActionPerformed
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel) rincian.getModel();

        // Mendapatkan jumlah dari spinner
        int jumlahEsManggaSmoothies = (int) jSpinnerEsManggaSmoothies.getValue();
        int hargaEsManggaSmoothies = 10000;

        // Validasi jumlah
        if (jumlahEsManggaSmoothies > 0) {
            // Menghitung total harga
            int jumlahHarga = jumlahEsManggaSmoothies * hargaEsManggaSmoothies;

            // Menambahkan data baru ke tabel
            model.addRow(new Object[]{"Es Mangga Smoothies", jumlahEsManggaSmoothies, hargaEsManggaSmoothies, jumlahHarga});

            // Pesan sukses
            JOptionPane.showMessageDialog(this, "Es Mangga Smoothies berhasil ditambahkan ke rincian.", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Pesan peringatan
            JOptionPane.showMessageDialog(this, "Jumlah Es Mangga Smoothies harus lebih dari 0.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_beliEsManggaSmoothiesActionPerformed

    private void beliEsChocolateOreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beliEsChocolateOreoActionPerformed
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel) rincian.getModel();

        // Mendapatkan jumlah dari spinner
        int jumlahEsChocolateOreo = (int) jSpinnerEsChocolateOreo.getValue();
        int hargaEsChocolateOreo = 10000;

        // Validasi jumlah
        if (jumlahEsChocolateOreo > 0) {
            // Menghitung total harga
            int jumlahHarga = jumlahEsChocolateOreo * hargaEsChocolateOreo;

            // Menambahkan data baru ke tabel
            model.addRow(new Object[]{"Es Chocolate Oreo", jumlahEsChocolateOreo, hargaEsChocolateOreo, jumlahHarga});

            // Pesan sukses
            JOptionPane.showMessageDialog(this, "Es Chocolate Oreo berhasil ditambahkan ke rincian.", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Pesan peringatan
            JOptionPane.showMessageDialog(this, "Jumlah Es Chocolate Oreo harus lebih dari 0.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_beliEsChocolateOreoActionPerformed

    private void beliEsBobaCaramelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beliEsBobaCaramelActionPerformed
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel) rincian.getModel();

        // Mendapatkan jumlah dari spinner
        int jumlahEsBobaCaramel = (int) jSpinnerEsBobaCaramel.getValue();
        int hargaEsBobaCaramel = 10000;

        // Validasi jumlah
        if (jumlahEsBobaCaramel > 0) {
            // Menghitung total harga
            int jumlahHarga = jumlahEsBobaCaramel * hargaEsBobaCaramel;

            // Menambahkan data baru ke tabel
            model.addRow(new Object[]{"Es Boba Caramel", jumlahEsBobaCaramel, hargaEsBobaCaramel, jumlahHarga});

            // Pesan sukses
            JOptionPane.showMessageDialog(this, "Es Boba Caramel berhasil ditambahkan ke rincian.", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Pesan peringatan
            JOptionPane.showMessageDialog(this, "Jumlah Es Boba Caramel harus lebih dari 0.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_beliEsBobaCaramelActionPerformed

    private void beliEsGreenTeaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beliEsGreenTeaActionPerformed
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel) rincian.getModel();

        // Mendapatkan jumlah dari spinner
        int jumlahEsGreenTea = (int) jSpinnerEsGreenTea.getValue();
        int hargaEsGreenTea = 10000;

        // Validasi jumlah
        if (jumlahEsGreenTea > 0) {
            // Menghitung total harga
            int jumlahHarga = jumlahEsGreenTea * hargaEsGreenTea;

            // Menambahkan data baru ke tabel
            model.addRow(new Object[]{"Es Green Tea", jumlahEsGreenTea, hargaEsGreenTea, jumlahHarga});

            // Pesan sukses
            JOptionPane.showMessageDialog(this, "Es Green Tea berhasil ditambahkan ke rincian.", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Pesan peringatan
            JOptionPane.showMessageDialog(this, "Jumlah Es Green Tea harus lebih dari 0.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_beliEsGreenTeaActionPerformed

    private void beliMochiDaifukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beliMochiDaifukuActionPerformed
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel) rincian.getModel();

        // Mendapatkan jumlah dari spinner
        int jumlahMochiDaifuku = (int) jSpinnerMochiDaifuku.getValue();
        int hargaMochiDaifuku = 5000;

        // Validasi jumlah
        if (jumlahMochiDaifuku > 0) {
            // Menghitung total harga
            int jumlahHarga = jumlahMochiDaifuku * hargaMochiDaifuku;

            // Menambahkan data baru ke tabel
            model.addRow(new Object[]{"Mochi Daifuku", jumlahMochiDaifuku, hargaMochiDaifuku, jumlahHarga});

            // Pesan sukses
            JOptionPane.showMessageDialog(this, "Mochi Daifuku berhasil ditambahkan ke rincian.", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Pesan peringatan
            JOptionPane.showMessageDialog(this, "Jumlah Mochi Daifuku harus lebih dari 0.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_beliMochiDaifukuActionPerformed

    private void beliMochiBitesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beliMochiBitesActionPerformed
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel) rincian.getModel();

        // Mendapatkan jumlah dari spinner
        int jumlahMochiBites = (int) jSpinnerMochiBites.getValue();
        int hargaMochiBites = 12000;

        // Validasi jumlah
        if (jumlahMochiBites > 0) {
            // Menghitung total harga
            int jumlahHarga = jumlahMochiBites * hargaMochiBites;

            // Menambahkan data baru ke tabel
            model.addRow(new Object[]{"Mochi Bites", jumlahMochiBites, hargaMochiBites, jumlahHarga});

            // Pesan sukses
            JOptionPane.showMessageDialog(this, "Mochi Bites berhasil ditambahkan ke rincian.", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Pesan peringatan
            JOptionPane.showMessageDialog(this, "Jumlah Mochi Bites harus lebih dari 0.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_beliMochiBitesActionPerformed

    private void beliMilleCrepesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beliMilleCrepesActionPerformed
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel) rincian.getModel();

        // Mendapatkan jumlah dari spinner
        int jumlahMilleCrepes = (int) jSpinnerMilleCrepes.getValue();
        int hargaMilleCrepes = 12000;

        // Validasi jumlah
        if (jumlahMilleCrepes > 0) {
            // Menghitung total harga
            int jumlahHarga = jumlahMilleCrepes * hargaMilleCrepes;

            // Menambahkan data baru ke tabel
            model.addRow(new Object[]{"Mille Crepes", jumlahMilleCrepes, hargaMilleCrepes, jumlahHarga});

            // Pesan sukses
            JOptionPane.showMessageDialog(this, "Mille Crepes berhasil ditambahkan ke rincian.", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Pesan peringatan
            JOptionPane.showMessageDialog(this, "Jumlah Mille Crepes harus lebih dari 0.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_beliMilleCrepesActionPerformed

    private void beliFruitSandoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beliFruitSandoActionPerformed
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel) rincian.getModel();

        // Mendapatkan jumlah dari spinner
        int jumlahFruitSando = (int) jSpinnerFruitSando.getValue();
        int hargaFruitSando = 10000;

        // Validasi jumlah
        if (jumlahFruitSando > 0) {
            // Menghitung total harga
            int jumlahHarga = jumlahFruitSando * hargaFruitSando;

            // Menambahkan data baru ke tabel
            model.addRow(new Object[]{"Fruit Sando", jumlahFruitSando, hargaFruitSando, jumlahHarga});

            // Pesan sukses
            JOptionPane.showMessageDialog(this, "Fruit Sando berhasil ditambahkan ke rincian.", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Pesan peringatan
            JOptionPane.showMessageDialog(this, "Jumlah Fruit Sando harus lebih dari 0.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_beliFruitSandoActionPerformed

    private void beliCookiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beliCookiesActionPerformed
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel) rincian.getModel();

        // Mendapatkan jumlah dari spinner
        int jumlahCookies = (int) jSpinnerCookies.getValue();
        int hargaCookies = 8000;

        // Validasi jumlah
        if (jumlahCookies > 0) {
            // Menghitung total harga
            int jumlahHarga = jumlahCookies * hargaCookies;

            // Menambahkan data baru ke tabel
            model.addRow(new Object[]{"Cookies", jumlahCookies, hargaCookies, jumlahHarga});

            // Pesan sukses
            JOptionPane.showMessageDialog(this, "Cookies berhasil ditambahkan ke rincian.", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Pesan peringatan
            JOptionPane.showMessageDialog(this, "Jumlah Cookies harus lebih dari 0.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_beliCookiesActionPerformed

    private void beliBomboloniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beliBomboloniActionPerformed
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel) rincian.getModel();

        // Mendapatkan jumlah dari spinner
        int jumlahBomboloni = (int) jSpinnerBomboloni.getValue();
        int hargaBomboloni = 10000;

        // Validasi jumlah
        if (jumlahBomboloni > 0) {
            // Menghitung total harga
            int jumlahHarga = jumlahBomboloni * hargaBomboloni;

            // Menambahkan data baru ke tabel
            model.addRow(new Object[]{"Bomboloni", jumlahBomboloni, hargaBomboloni, jumlahHarga});

            // Pesan sukses
            JOptionPane.showMessageDialog(this, "Bomboloni berhasil ditambahkan ke rincian.", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Pesan peringatan
            JOptionPane.showMessageDialog(this, "Jumlah Bomboloni harus lebih dari 0.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_beliBomboloniActionPerformed

    private void beliRiceBowlTeriyakiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beliRiceBowlTeriyakiActionPerformed
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel) rincian.getModel();

        // Mendapatkan jumlah dari spinner
        int jumlahRiceBowlTeriyaki = (int) jSpinnerRiceBowlTeriyaki.getValue();
        int hargaRiceBowlTeriyaki = 15000;

        // Validasi jumlah
        if (jumlahRiceBowlTeriyaki > 0) {
            // Menghitung total harga
            int jumlahHarga = jumlahRiceBowlTeriyaki * hargaRiceBowlTeriyaki;

            // Menambahkan data baru ke tabel
            model.addRow(new Object[]{"Rice Bowl Teriyaki", jumlahRiceBowlTeriyaki, hargaRiceBowlTeriyaki, jumlahHarga});

            // Pesan sukses
            JOptionPane.showMessageDialog(this, "Rice Bowl Teriyaki berhasil ditambahkan ke rincian.", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Pesan peringatan
            JOptionPane.showMessageDialog(this, "Jumlah Rice Bowl Teriyaki harus lebih dari 0.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_beliRiceBowlTeriyakiActionPerformed

    private void beliKimbabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beliKimbabActionPerformed
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel) rincian.getModel();

        // Mendapatkan jumlah dari spinner
        int jumlahKimbab = (int) jSpinnerKimbab.getValue();
        int hargaKimbab = 13000;

        // Validasi jumlah
        if (jumlahKimbab > 0) {
            // Menghitung total harga
            int jumlahHarga = jumlahKimbab * hargaKimbab;

            // Menambahkan data baru ke tabel
            model.addRow(new Object[]{"Kimbab", jumlahKimbab, hargaKimbab, jumlahHarga});

            // Pesan sukses
            JOptionPane.showMessageDialog(this, "Kimbab berhasil ditambahkan ke rincian.", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Pesan peringatan
            JOptionPane.showMessageDialog(this, "Jumlah Kimbab harus lebih dari 0.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_beliKimbabActionPerformed

    private void beliWontonKuahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beliWontonKuahActionPerformed
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel) rincian.getModel();

        // Mendapatkan jumlah dari spinner
        int jumlahWontonKuah = (int) jSpinnerWontonKuah.getValue();
        int hargaWontonKuah = 15000;

        // Validasi jumlah
        if (jumlahWontonKuah > 0) {
            // Menghitung total harga
            int jumlahHarga = jumlahWontonKuah * hargaWontonKuah;

            // Menambahkan data baru ke tabel
            model.addRow(new Object[]{"Wonton Kuah", jumlahWontonKuah, hargaWontonKuah, jumlahHarga});

            // Pesan sukses
            JOptionPane.showMessageDialog(this, "Wonton Kuah berhasil ditambahkan ke rincian.", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Pesan peringatan
            JOptionPane.showMessageDialog(this, "Jumlah Wonton Kuah harus lebih dari 0.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_beliWontonKuahActionPerformed

    private void beliBasoPentolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beliBasoPentolActionPerformed
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel) rincian.getModel();

        // Mendapatkan jumlah dari spinner
        int jumlahBasoPentol = (int) jSpinnerBasoPentol.getValue();
        int hargaBasoPentol = 10000;

        // Validasi jumlah
        if (jumlahBasoPentol > 0) {
            // Menghitung total harga
            int jumlahHarga = jumlahBasoPentol * hargaBasoPentol;

            // Menambahkan data baru ke tabel
            model.addRow(new Object[]{"Baso Pentol", jumlahBasoPentol, hargaBasoPentol, jumlahHarga});

            // Pesan sukses
            JOptionPane.showMessageDialog(this, "Baso Pentol berhasil ditambahkan ke rincian.", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Pesan peringatan
            JOptionPane.showMessageDialog(this, "Jumlah Baso Pentol harus lebih dari 0.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_beliBasoPentolActionPerformed

    private void beliDimsumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beliDimsumActionPerformed
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel) rincian.getModel();

        // Mendapatkan jumlah dari spinner
        int jumlahDimsum = (int) jSpinnerEsLumut.getValue();
        int hargaDimsum = 10000;

        // Validasi jumlah
        if (jumlahDimsum > 0) {
            // Menghitung total harga
            int jumlahHarga = jumlahDimsum * hargaDimsum;

            // Menambahkan data baru ke tabel
            model.addRow(new Object[]{"Dimsum", jumlahDimsum, hargaDimsum, jumlahHarga});

            // Pesan sukses
            JOptionPane.showMessageDialog(this, "Dimsum berhasil ditambahkan ke rincian.", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Pesan peringatan
            JOptionPane.showMessageDialog(this, "Jumlah Dimsum harus lebih dari 0.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_beliDimsumActionPerformed

    private void beliNasiKebuliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beliNasiKebuliActionPerformed
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel) rincian.getModel();

        // Mendapatkan jumlah dari spinner
        int jumlahNasiKebuli = (int) jSpinnerNasiKebuli.getValue();
        int hargaNasiKebuli = 13000;

        // Validasi jumlah
        if (jumlahNasiKebuli > 0) {
            // Menghitung total harga
            int jumlahHarga = jumlahNasiKebuli * hargaNasiKebuli;

            // Menambahkan data baru ke tabel
            model.addRow(new Object[]{"Nasi Kebuli", jumlahNasiKebuli, hargaNasiKebuli, jumlahHarga});

            // Pesan sukses
            JOptionPane.showMessageDialog(this, "Nasi Kebuli berhasil ditambahkan ke rincian.", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Pesan peringatan
            JOptionPane.showMessageDialog(this, "Jumlah Nasi kebuli harus lebih dari 0.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_beliNasiKebuliActionPerformed

    private void btnOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrderActionPerformed
        // TODO add your handling code here:
                
        FormulirPemesananCostumerGUI cust = null;
        try {
            JOptionPane.showMessageDialog(null, "Data tidak boleh kosong", "Validasi Data", JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
            cust = new FormulirPemesananCostumerGUI();
        } catch (SQLException ex) {
            Logger.getLogger(MenuCostumerGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        cust.setVisible(true); // Menampilkan Gui baru

        // Menutup atau menyembunyikan frame saat ini (opsional)
        this.dispose(); 
        
    }//GEN-LAST:event_btnOrderActionPerformed

    private void jtxtTotalKeseluruhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtTotalKeseluruhanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtTotalKeseluruhanActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuAdminGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuAdminGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuAdminGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuAdminGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MenuCostumerGUI menuGUI = new MenuCostumerGUI(); // Membuat objek
                menuGUI.setVisible(true); // Menampilkan objek GUI

            }

        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton beliBasoPentol;
    private javax.swing.JButton beliBomboloni;
    private javax.swing.JButton beliCookies;
    private javax.swing.JButton beliDimsum;
    private javax.swing.JButton beliEsBobaCaramel;
    private javax.swing.JButton beliEsChocolateOreo;
    private javax.swing.JButton beliEsGreenTea;
    private javax.swing.JButton beliEsLumut;
    private javax.swing.JButton beliEsManggaSmoothies;
    private javax.swing.JButton beliEsThaiTea;
    private javax.swing.JButton beliFruitSando;
    private javax.swing.JButton beliKimbab;
    private javax.swing.JButton beliMilleCrepes;
    private javax.swing.JButton beliMochiBites;
    private javax.swing.JButton beliMochiDaifuku;
    private javax.swing.JButton beliNasiKebuli;
    private javax.swing.JButton beliRiceBowlTeriyaki;
    private javax.swing.JButton beliWontonKuah;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnHitung;
    private javax.swing.JButton btnOrder;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinnerBasoPentol;
    private javax.swing.JSpinner jSpinnerBomboloni;
    private javax.swing.JSpinner jSpinnerCookies;
    private javax.swing.JSpinner jSpinnerDimsum;
    private javax.swing.JSpinner jSpinnerEsBobaCaramel;
    private javax.swing.JSpinner jSpinnerEsChocolateOreo;
    private javax.swing.JSpinner jSpinnerEsGreenTea;
    private javax.swing.JSpinner jSpinnerEsLumut;
    private javax.swing.JSpinner jSpinnerEsManggaSmoothies;
    private javax.swing.JSpinner jSpinnerEsThaiTea;
    private javax.swing.JSpinner jSpinnerFruitSando;
    private javax.swing.JSpinner jSpinnerKimbab;
    private javax.swing.JSpinner jSpinnerMilleCrepes;
    private javax.swing.JSpinner jSpinnerMochiBites;
    private javax.swing.JSpinner jSpinnerMochiDaifuku;
    private javax.swing.JSpinner jSpinnerNasiKebuli;
    private javax.swing.JSpinner jSpinnerRiceBowlTeriyaki;
    private javax.swing.JSpinner jSpinnerWontonKuah;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jtxtTotalKeseluruhan;
    private javax.swing.JTable rincian;
    // End of variables declaration//GEN-END:variables
}
